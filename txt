      <h2>DDA Line</h2>
	
        <p><code>#include <stdio.h> 
#include <conio.h>
#include <graphics.h>
#include <math.h> 
#include <stdlib.h>
void  ddaline(float x1,float y1,float x2,float y2)
{
	int i, color=5;
	float x,y,xinc,yinc,steps;
	steps=abs(x2-x1);
	if(steps <abs(y2-y1))
	steps=abs(y2-y1);
	else steps=abs(x2-x1);
	xinc=(x2-x1)/steps;
	yinc=(y2-y1)/steps;
	x=x1;
	y=y1;
	putpixel((int) x,(int)y,color);
	for(i=1;i<=steps;i++)
	 {
	putpixel((int) x,(int)y,color);
	 x=x+xinc;
	 y=y+yinc;
	 }
}
void main()
{
int gd=DETECT,gm,color;
float x1,y1,x2,y2;
initgraph(&gd,&gm,"c:\\turboc3\\bgi");
printf("%d %d \n",getmaxx(),getmaxy());
printf("\n Enter the left end points");
scanf("%f%f",&x1,&y1);
printf("\n Enter the right end points");
scanf("%f%f",&x2,&y2);
ddaline(x1,y1,x2,y2);
getch();
closegraph();
} </code> 
</p>

        <h2>Bresenham Line</h2>
        <p>#include<stdio.h>
#include<graphics.h>
#include<conio.h>
void main()
{
	int dx,dy,x,y,p,x1,x2,y1,y2,xend;
	int gd=DETECT,gm;
	clrscr();
	initgraph(&gd,&gm,"C:\\TC\\BGI");
	printf("\n\n Enter the coordinates of first point : ");
	scanf("%d%d",&x1,&y1);
	printf("%d%d \n",x1,y1);
	printf("\n\n Enter the co=ordinates of second point : ");
	scanf("%d %d",&x2,&y2);
	dx=abs(x2-x1);
	dy=abs(y2-y1);
	p=2*(dy) - (dx);
        if (x1>x2)
	{
		x=x2;
		y=y2;
		xend=x1;
	}
	else
	{
		x=x1;
		y=y1;
		xend=x2;
	}
	putpixel(x,y,WHITE);
	setcolor(6);
	setbkcolor(3);
	while(x <= xend)
	{
		if(p<=0)
		{
			x=x+1;
			y=y;
			p=p+2*(dy);
		 }
		else
		 {
			x=x+1;
			y=y+1;
			p=p+2*(dy-dx);
		  }
		putpixel(x,y,WHITE);
	 }
	getch();
	closegraph();
}</p>

        <h2>DDA Circle</h2>
        <p>#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
void main()
{
int xc=340,yc=280,y,r,x;
float theta;
int gd=DETECT,gm;
initgraph(&gd,&gm,"C:\\turboc3\\BGI");
//printf�Enter the center of circle:�;
//scanf("%d%d",&xc,&yc);
printf("Enter radius of circle:");
scanf("%d",&r);
for(theta=0;theta<=2*3.14;theta+=0.01)
{
	x=(int)(xc+(r*cos(theta)));
	y=(int)(yc+(r*sin(theta)));
	putpixel(x,y,WHITE);
}
	getch();
	closegraph();
}</p>

        <h2>Bresenham CIrcle</h2>
        <p>Write a C program to implement Bresenham circle drawing algorithm.
#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
void main()
{
	int gd=DETECT,gm;
	int r,x,y,p,xc=320,yc=240;
	initgraph(&gd,&gm,"C:\\TurboC3\\BGI");
	cleardevice();
	printf("Enter the radius");
	scanf("%d",&r);
	x=0;
	y=r;
	
	putpixel(xc+x,yc-y,1);
	p=3-(2*r);
	
	for(x=0;x<=y;x++)
	{
		if(p<0)
		{
			y=y;
			p=(p+(4*x)+6);
		}
		else
		{
			y=y-1;
			p=p+((4*(x-y)+10));
		}
		putpixel(xc+x,yc-y,1);
		putpixel(xc-x,yc-y,2);
		putpixel(xc+x,yc+y,3);
		putpixel(xc-x,yc+y,4);
		putpixel(xc+y,yc-x,5);
		putpixel(xc-y,yc-x,6);
		putpixel(xc+y,yc+x,7);
		putpixel(xc-y,yc+x,8);
	}
	getch();
	closegraph(); 
}

</p>

        <h2>National Flag</h2>
        <p>#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<dos.h>
#include<math.h>
int main()
     {
        int gd = DETECT,gm,a,b,i,r,x,y;
        initgraph(&gd, &gm,"C:\\Turboc3\\BGI");
       //draw the bottom rectangle
        setfillstyle(SOLID_FILL,1);
        rectangle(10,320,200,340);
        floodfill(11,321,15);
        rectangle(30,300,175,320);
        floodfill(31,301,15);
        rectangle(50,280,155,300);
        floodfill(51,281,15);
        //pole
        setfillstyle(SOLID_FILL,3);
        rectangle(100,38,110,280);
        floodfill(101,39,15);
       //draw the top rectangle
        setfillstyle(SOLID_FILL,RED);
        rectangle(110,40,220,58);
        floodfill(111,43,15);
        setfillstyle(SOLID_FILL,15);
        rectangle(110,58,220,78);
        floodfill(111,59,15);
        setfillstyle(SOLID_FILL,GREEN);
        rectangle(110,78,220,98);
        floodfill(111,79,15);
       //Ashok chakra
       //
        a=160;
        b=68;
        r=13;
       setcolor(BLUE);
       circle(a,b,r);
       for(i=0;i<=360;i=i+25)
       {
          x=r*cos(i*3.14/180);
          y=r*sin(i*3.14/180);
         line(a,b,a+x,b-y); 
       }
    getch();
    return 0;
  // closegraph();
}</p>

        <h2>Pie Chart</h2>
        <p>Write a C program for drawing a piechart depicting the election results
of 4 Parties.
#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
void main()
{
	int gd=DETECT,gm;
	int midx,midy,dx,dy,i,value[20],n,degree=0,top,left;
	long start,end;
	char str[5];
	initgraph(&gd,&gm,"C:\\TC\\BGI");
	cleardevice();
	printf("enter the no of slices\n");
	scanf("%d",&n);
	setcolor(MAGENTA);
	rectangle(0,40,639,450);
	settextstyle(SANS_SERIF_FONT,HORIZ_DIR,2);
	setcolor(WHITE);
	outtextxy(275,10,"PIE CHART");
	midx=getmaxx()/2;
	midy=getmaxy()/2;
	start=end=0;
	value[0]=0;
	printf("enter the percentage\n");
	for(i=1;i<=n;i++)
	{
		scanf("%d",&value[i]);
		degree=degree+((long)value[i]*360)/100;
		if(degree>360)
		{
		printf("percentage more than 100 % ...program\n");
			getch();
			exit(0);
		}

	}
	if(degree<360)
		{
		 printf("percentage less than 100 % ...program\n");
		 getch();
		 exit(0);
		 }
	for(i=0;i<n;i++)
	{
		end=start+(long)(value[i+1]*360)/100;
		setfillstyle(i+1,i+1);
		pieslice(midx,midy,start,end,200);
		itoa(value[i+1],str,10);
		dx=midx+200*cos(((double)(start+end)/2)*(3.14f/180));
		dy=midy+200*sin(((-1)*(double)(start+end)/2)*(3.14f/180));
		outtextxy(dx,dy,str);
		start=start+((long)value[i+1]*360)/100;
		getch();
	}
getch();
closegraph();
}</p>

        <h2>Histogram</h2>
        <p>/*Write a C program for drawing a vertical histogram depicting the production of cars in a manufacturing
company for four different years.*/
#include<stdio.h>
#include<graphics.h>
#include<math.h>
void bargraph(int p[])
{
	int i,left,top,wide,bottom,deep,qty,j;
	static char label[4][5]={"2012","2013","2014","2015"};
	char str[5];
	setfillstyle(SOLID_FILL,BLUE);
	wide=30;
	bottom=getmaxy()-40;
	deep=7;
	left=wide;
	for(i=0;i<4;i++)
	{
		top=(bottom)-(p[i]*5);
		bar3d(left,top,(left+wide),bottom,deep,1);
		outtextxy(left,460,label[i]);
		itoa(p[i],str,10);
		outtextxy((left+5),(top-15),str);
		left=left+(wide*2);
	}
}

void main()
{
	int i,qty[4],j=2011;
	int gd=DETECT,gm;
	initgraph(&gd,&gm,"C://TURBOC3//BGI");
	
	for(i=0;i<4;i++)
	{
		j++;
		printf("\n Enter the quantity of cars produced in year %d between 0 & 50",j);
		scanf("%d",&qty[i]);
	}
	bargraph(qty);
	getch();
	closegraph();
}
</p>

        <h2>Cohen Sutherland Line clipping</h2>
        <p>//Write a program to implement Cohen Sutherland line clipping algorithm.
        #include<graphics.h>
        #include<conio.h>
        #include<stdio.h>
        const int t=1,b=2,r=2,l=8;
        float xmin,ymin,xmax,ymax;
        int calcode(float x,float y)
        {
          int code=0;
          if(y>ymax)
          code |=t;
          else if(y<ymin)
          code|=b;
          else if(x>xmax)
          code|=r;
          else if(x<xmin)
          code|=l;
          return(code);
        }
        void lineclip(float x1,float y1,float x2,float y2)
        {
          unsigned int code1,code2,codeout;
          int accept=0,done=0;
          code1=calcode(x1,y1);
          code2=calcode(x2,y2);
          do
          {
            if(!(code1|code2))
            {
              accept=1;
              done=1;
            }
            else if(code1 & code2)
              done=1;
            else
            {
              float x,y;
              codeout=code1?code1:code2;
              if(codeout& t)
              {
                x=x1+(x2-x1)*(ymax-y1)/(y2-y1);
                y=ymax;
              }
              else if(codeout& b)
              {
                x=x1+(x2-x1)*(ymin-y1)/(y2-y1);
                y=ymin;
              }
              else if(codeout& r)
              {
                y=y1+(y2-y1)*(xmax-x1)/(x2-x1);
                x=xmax;
              }
              else
              {
                y=y1+(y2-y1)*(xmin-x1)/(x2-x1);
                x=xmin;
              }
              if(codeout==code1)
              {
                x1=x;
                y1=y;
                code1=calcode(x1,y1);
              }
              else
              {
                x2=x;
                y2=y;
                code2=calcode(x2,y2);
              }
            }
          }
          while(done==0);
          if(accept)
          line(x1,y1,x2,y2);
          rectangle(xmin,ymin,xmax,ymax);
        }
        main()
        {
          float x1,y1,x2,y2;
          int gd=DETECT,gm;
          clrscr();
          initgraph(&gd,&gm,"C:\\TurboC3\\BGI");
          printf("Enter the co-ordinates of line ::::\n\t x1");
          scanf("%f",&x1);
          printf("\n\t y1:");
          scanf("%f",&y1);
          printf("\n\t x2:");
          scanf("%f",&x2);
          printf("\n\t y2:");
          scanf("%f",&y2);
          printf("Enter the co-ordinates of window :::\n");
          printf("\n\txmin");
          scanf("%f",&xmin);
          printf("\n\tymin");
          scanf("%f",&ymin);
          printf("\n\txmax");
          scanf("%f",&xmax);
          printf("\n\tymax");
          scanf("%f",&ymax);
          clrscr();
          line(x1,y1,x2,y2);
          rectangle(xmin,ymin,xmax,ymax);
          getch();
          clrscr();
          lineclip(x1,y1,x2,y2);
          getch();
          closegraph();
          return 0;
        } 
        </p>
